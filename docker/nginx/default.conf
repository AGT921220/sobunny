# Archivo de configuración de Nginx para redirigir HTTP a HTTPS excepto en el puerto 81
# y proteger el acceso a phpMyAdmin con medidas de seguridad adicionales.

# Definimos una zona para limitar las solicitudes por IP
limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;

# Bloque para manejar redirección de HTTP a HTTPS excluyendo puerto 81
server {
    listen 80;
    server_name sobunny.com www.sobunny.com;

    # Usamos map para evitar problemas con `if`
    map $server_port $redirect_to_https {
        81 0;
        default 1;
    }

    location / {
        if ($redirect_to_https) {
            return 301 https://$server_name$request_uri;
        }
    }
}

# Configuración para PHPMyAdmin en el puerto 81
server {
    listen 81;
    server_name sobunny.com www.sobunny.com;

    # Permitir acceso solo desde IPs confiables
    allow X.X.X.X;  # Cambia X.X.X.X por tu IP
    allow Y.Y.Y.Y;  # Agrega más IPs si es necesario
    deny all;

    location / {
        # No redirigir a HTTPS aquí
        proxy_pass http://phpmyadmin:80;  # Cambia al contenedor o servicio de phpMyAdmin
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Bloque para tráfico HTTPS en el puerto 443
server {
    listen 443 ssl;
    server_name sobunny.com www.sobunny.com;

    # Certificados SSL
    ssl_certificate /etc/letsencrypt/live/sobunny.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sobunny.com/privkey.pem;

    # Protocolos y cifrados SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # Tamaño máximo del cuerpo
    client_max_body_size 150M;

    # Headers de seguridad
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options SAMEORIGIN;

    # Archivos no permitidos
    location ~ /\.git {
        deny all;
    }

    # Limitar métodos permitidos
    limit_except GET POST {
        deny all;
    }

    # Logs
    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    # Raíz del sitio
    root /var/www/html/public;

    index index.php index.html;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Procesamiento de archivos PHP
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;  # Cambia al contenedor de PHP-FPM
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # Bloqueo adicional para prevenir DDoS
    location / {
        limit_req zone=req_limit_per_ip burst=20 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }
}

# Bloque para proteger contra agentes de usuario maliciosos
server {
    listen 443 ssl;
    server_name sobunny.com www.sobunny.com;

    location / {
        if ($http_user_agent ~* (badbot|crawler|scanner)) {
            return 444;
        }

        limit_req zone=req_limit_per_ip burst=20 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }
}
